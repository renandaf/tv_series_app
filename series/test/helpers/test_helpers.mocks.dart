// Mocks generated by Mockito 5.3.2 from annotations
// in series/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i14;
import 'dart:typed_data' as _i15;

import 'package:core/core.dart' as _i7;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies/movies.dart' as _i13;
import 'package:series/data/models/series_detail_model.dart' as _i3;
import 'package:series/data/models/series_model.dart' as _i10;
import 'package:series/data/models/watchlist_model.dart' as _i11;
import 'package:series/domain/entities/detail.dart' as _i9;
import 'package:series/domain/entities/series.dart' as _i8;
import 'package:series/series.dart' as _i5;
import 'package:sqflite/sqflite.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeriesDetail_1 extends _i1.SmartFake implements _i3.SeriesDetail {
  _FakeSeriesDetail_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_3 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRepository extends _i1.Mock implements _i5.SeriesRepository {
  MockSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> getOnAirSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnAirSeries,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #getOnAirSeries,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> getPopularSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularSeries,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #getPopularSeries,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> getTopRatedSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedSeries,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #getTopRatedSeries,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.Detail>> getSeriesDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesDetail,
          [id],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, _i9.Detail>>.value(
            _FakeEither_0<_i7.Failure, _i9.Detail>(
          this,
          Invocation.method(
            #getSeriesDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i9.Detail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>
      getSeriesRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getSeriesRecommendations,
              [id],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.Series>>(
              this,
              Invocation.method(
                #getSeriesRecommendations,
                [id],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>> searchSeries(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchSeries,
          [query],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #searchSeries,
            [query],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.Series>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> addWatchlist(
          _i9.Detail? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWatchlist,
          [series],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #addWatchlist,
            [series],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i9.Detail? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [series],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [series],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i9.Detail>>> getWatchlistSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistSeries,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i9.Detail>>>.value(
                _FakeEither_0<_i7.Failure, List<_i9.Detail>>(
          this,
          Invocation.method(
            #getWatchlistSeries,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i9.Detail>>>);
}

/// A class which mocks [SeriesAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesAPI extends _i1.Mock implements _i5.SeriesAPI {
  MockSeriesAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i10.SeriesModel>> getOnAirSeries() => (super.noSuchMethod(
        Invocation.method(
          #getOnAirSeries,
          [],
        ),
        returnValue:
            _i6.Future<List<_i10.SeriesModel>>.value(<_i10.SeriesModel>[]),
      ) as _i6.Future<List<_i10.SeriesModel>>);
  @override
  _i6.Future<List<_i10.SeriesModel>> getPopularSeries() => (super.noSuchMethod(
        Invocation.method(
          #getPopularSeries,
          [],
        ),
        returnValue:
            _i6.Future<List<_i10.SeriesModel>>.value(<_i10.SeriesModel>[]),
      ) as _i6.Future<List<_i10.SeriesModel>>);
  @override
  _i6.Future<List<_i10.SeriesModel>> getTopRatedSeries() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedSeries,
          [],
        ),
        returnValue:
            _i6.Future<List<_i10.SeriesModel>>.value(<_i10.SeriesModel>[]),
      ) as _i6.Future<List<_i10.SeriesModel>>);
  @override
  _i6.Future<_i3.SeriesDetail> getSeriesDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getSeriesDetail,
          [id],
        ),
        returnValue: _i6.Future<_i3.SeriesDetail>.value(_FakeSeriesDetail_1(
          this,
          Invocation.method(
            #getSeriesDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.SeriesDetail>);
  @override
  _i6.Future<List<_i10.SeriesModel>> getSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesRecommendations,
          [id],
        ),
        returnValue:
            _i6.Future<List<_i10.SeriesModel>>.value(<_i10.SeriesModel>[]),
      ) as _i6.Future<List<_i10.SeriesModel>>);
  @override
  _i6.Future<List<_i10.SeriesModel>> searchSeries(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchSeries,
          [query],
        ),
        returnValue:
            _i6.Future<List<_i10.SeriesModel>>.value(<_i10.SeriesModel>[]),
      ) as _i6.Future<List<_i10.SeriesModel>>);
}

/// A class which mocks [SeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesLocalDataSource extends _i1.Mock
    implements _i5.SeriesLocalDataSource {
  MockSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i11.SeriesTable? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [series],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(_i11.SeriesTable? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [series],
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i11.SeriesTable?> getSeriesById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getSeriesById,
          [id],
        ),
        returnValue: _i6.Future<_i11.SeriesTable?>.value(),
      ) as _i6.Future<_i11.SeriesTable?>);
  @override
  _i6.Future<List<_i11.SeriesTable>> getWatchlistSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistSeries,
          [],
        ),
        returnValue:
            _i6.Future<List<_i11.SeriesTable>>.value(<_i11.SeriesTable>[]),
      ) as _i6.Future<List<_i11.SeriesTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i7.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i12.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i6.Future<_i12.Database?>.value(),
      ) as _i6.Future<_i12.Database?>);
  @override
  _i6.Future<int> insertWatchlist(_i11.SeriesTable? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [series],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<int> removeWatchlist(_i11.SeriesTable? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [series],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getSeriesById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesById,
          [id],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistSeries() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistSeries,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<int> insertWatchlistMovie(_i13.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistMovie,
          [movie],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<int> removeWatchlistMovie(_i13.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistMovie,
          [movie],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i14.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i15.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i15.Uint8List>.value(_i15.Uint8List(0)),
      ) as _i6.Future<_i15.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_3(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
